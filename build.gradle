plugins {
  id "com.jfrog.bintray" version "1.7.3"
}

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'eclipse'

group 'nl.jworks.markdown_to_asciidoc'
version '1.1'

sourceCompatibility = targetCompatibility = 1.6
defaultTasks 'check'

repositories {
  jcenter()


  if (project.hasProperty('useMavenLocal') && project.useMavenLocal.toBoolean()) {
    mavenLocal()
  }
  mavenCentral()
}

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}

javadoc {
  options.encoding = 'UTF-8'
}

bintray {
  user = System.getenv('BINTRAY_USER')
  key = System.getenv('BINTRAY_KEY')

  publications = ['mavenJava'] //When uploading Maven-based publication files
  dryRun = false //Whether to run this as dry-run, without deploying
  publish = true //If version should be auto published after an upload
  pkg {
    repo = 'maven'
    name = 'markdown_to_asciidoc'
    desc = 'An easy Markdown to Asciidoc converter'
    websiteUrl = 'https://github.com/bodiam/markdown-to-asciidoc'
    issueTrackerUrl = 'https://github.com/bodiam/markdown-to-asciidoc/issues'
    vcsUrl = 'https://github.com/bodiam/markdown-to-asciidoc'
    licenses = ['Apache-2.0']
    labels = ['markdown', 'asciidoc', 'java']
    publicDownloadNumbers = true
    //Optional version descriptor
    version {
      name = project.version //Bintray logical version name
      desc = 'Test version'
      mavenCentralSync {
        sync = false //Optional (true by default). Determines whether to sync the version to Maven Central.
        user = 'userToken' //OSS user token
        password = 'paasword' //OSS user password
        close = '1' //Optional property. By default the staging repository is closed and artifacts are released to Maven Central. You can optionally turn this behaviour off (by puting 0 as value) and release the version manually.
      }
    }
  }

}

publishing {
  publications {
    mavenJava(MavenPublication) {
      if (plugins.hasPlugin('war')) {
        from components.web
      } else {
        from components.java
      }

      artifact sourcesJar
      artifact javadocJar
    }
  }
}

dependencies {
  compile 'org.pegdown:pegdown:1.6.0'
  compile 'org.jsoup:jsoup:1.8.1'

  testCompile 'info.cukes:cucumber-picocontainer:1.1.8'
  testCompile 'info.cukes:cucumber-junit:1.1.8'
  testCompile 'junit:junit:4.12'
  testCompile 'org.apache.commons:commons-io:1.3.2'
}

task sourcesJar(type: Jar, dependsOn: classes) {
  from sourceSets.main.allSource
  classifier 'sources'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  from javadoc.destinationDir
  classifier 'javadoc'
}

artifacts {
  archives sourcesJar, javadocJar, distZip
}

startScripts {
  applicationName = rootProject.name
  mainClassName = 'nl.jworks.markdown_to_asciidoc.Converter'
}

eclipse {
  classpath {
    defaultOutputDir = file('build/eclipse')
  }
}
